{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Desktop\\\\js\\\\react\\\\react_beg\\\\reactFirstProject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Expense from \"./component/ExpenseItem\";\nimport Card from \"./component/Card\";\nimport NewExpense from \"./NewExpense/NewExpense\";\nimport ExpenseFilter from \"./NewExpense/ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_EXPENSES = [{\n  title: \"Car Insurance\",\n  amount: \"299.99\",\n  date: new Date(2021, 3, 28)\n}, {\n  title: \"Health Insurance\",\n  amount: \"459\",\n  date: new Date(2021, 2, 12)\n}, {\n  title: \"Books\",\n  amount: \"123\",\n  date: new Date(2021, 4, 21)\n}, {\n  title: \"College Fee\",\n  amount: \"4000\",\n  date: new Date(2021, 4, 4)\n}];\nfunction App() {\n  _s();\n  const [expense, setExpense] = useState(DUMMY_EXPENSES);\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n  const addNewHandler = expenseData => {\n    setExpense(prevExpense => {\n      return [expenseData, ...prevExpense];\n    });\n  };\n\n  // const [filterInfoText, setFilterInfoText] = useState(\"2019, 2021 & 2022\");\n  const changeSelectHandler = year => {\n    setFilteredYear(year);\n\n    //  the below example is for derived states\n    //  if(year==='2019'){\n    //   setFilterInfoText('2020, 2021 & 2022');\n    //  }\n    //  else if(year==='2020'){\n    //   setFilterInfoText('2019, 2021 & 2022');\n    //  }\n    //  else if(year==='2021'){\n    //   setFilterInfoText('2019, 2020 & 2022');\n    //  }\n    //  else{\n    //   setFilterInfoText('2019, 2020 & 2021');\n    //  }\n  };\n\n  const filteredExpenses = expense.filter(ex => {\n    return ex.date.getFullYear().toString() === filteredYear;\n  });\n  const expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expense record, I think you are broke\\uD83E\\uDD72\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 23\n  }, this);\n  if (filteredExpenses.length > 0) {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddingNew: addNewHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeSelect: changeSelectHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sh6BrsYllAaWkpysaADiPtiwaq4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expense","Card","NewExpense","ExpenseFilter","jsxDEV","_jsxDEV","DUMMY_EXPENSES","title","amount","date","Date","App","_s","expense","setExpense","filteredYear","setFilteredYear","addNewHandler","expenseData","prevExpense","changeSelectHandler","year","filteredExpenses","filter","ex","getFullYear","toString","expenseContent","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onAddingNew","selected","onChangeSelect","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Desktop/js/react/react_beg/reactFirstProject/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Expense from \"./component/ExpenseItem\";\nimport Card from \"./component/Card\";\nimport NewExpense from \"./NewExpense/NewExpense\";\nimport ExpenseFilter from \"./NewExpense/ExpenseFilter\";\n\nconst DUMMY_EXPENSES = [\n  {\n    title: \"Car Insurance\",\n    amount: \"299.99\",\n    date: new Date(2021, 3, 28),\n  },\n  {\n    title: \"Health Insurance\",\n    amount: \"459\",\n    date: new Date(2021, 2, 12),\n  },\n  {\n    title: \"Books\",\n    amount: \"123\",\n    date: new Date(2021, 4, 21),\n  },\n  {\n    title: \"College Fee\",\n    amount: \"4000\",\n    date: new Date(2021, 4, 4),\n  },\n];\nfunction App() {\n  const [expense, setExpense] = useState(DUMMY_EXPENSES);\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const addNewHandler = (expenseData) => {\n    setExpense((prevExpense) => {\n      return [expenseData, ...prevExpense];\n    });\n  };\n\n  // const [filterInfoText, setFilterInfoText] = useState(\"2019, 2021 & 2022\");\n  const changeSelectHandler = (year) => {\n    setFilteredYear(year);\n\n    //  the below example is for derived states\n    //  if(year==='2019'){\n    //   setFilterInfoText('2020, 2021 & 2022');\n    //  }\n    //  else if(year==='2020'){\n    //   setFilterInfoText('2019, 2021 & 2022');\n    //  }\n    //  else if(year==='2021'){\n    //   setFilterInfoText('2019, 2020 & 2022');\n    //  }\n    //  else{\n    //   setFilterInfoText('2019, 2020 & 2021');\n    //  }\n  };\n  \n  const filteredExpenses =expense.filter(ex => {\n    return (ex.date.getFullYear().toString() === filteredYear);\n  });\n const expenseContent=<p>No expense record, I think you are brokeðŸ¥²</p>\n if(filteredExpenses.length>0)\n {\n  \n }\n  return (\n    <div>\n      <NewExpense onAddingNew={addNewHandler} />\n      <Card>\n        <ExpenseFilter\n          selected={filteredYear}\n          onChangeSelect={changeSelectHandler}\n        />\n        {/* <p className=\"expenseFilterInfo\">\n          Data for years {filterInfoText} is hidden.\n        </p> */}\n\n        {}\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,cAAc,GAAG,CACrB;EACEC,KAAK,EAAE,eAAe;EACtBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EACEH,KAAK,EAAE,kBAAkB;EACzBC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EACEH,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AAC5B,CAAC,EACD;EACEH,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;AAC3B,CAAC,CACF;AACD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAACO,cAAc,CAAC;EACtD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;EAExD,MAAMkB,aAAa,GAAIC,WAAW,IAAK;IACrCJ,UAAU,CAAEK,WAAW,IAAK;MAC1B,OAAO,CAACD,WAAW,EAAE,GAAGC,WAAW,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAIC,IAAI,IAAK;IACpCL,eAAe,CAACK,IAAI,CAAC;;IAErB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,MAAMC,gBAAgB,GAAET,OAAO,CAACU,MAAM,CAACC,EAAE,IAAI;IAC3C,OAAQA,EAAE,CAACf,IAAI,CAACgB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKX,YAAY;EAC3D,CAAC,CAAC;EACH,MAAMY,cAAc,gBAACtB,OAAA;IAAAuB,QAAA,EAAG;EAA0C;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACtE,IAAGV,gBAAgB,CAACW,MAAM,GAAC,CAAC,EAC5B,CAEA;EACC,oBACE5B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACH,UAAU;MAACgC,WAAW,EAAEjB;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1C3B,OAAA,CAACJ,IAAI;MAAA2B,QAAA,eACHvB,OAAA,CAACF,aAAa;QACZgC,QAAQ,EAAEpB,YAAa;QACvBqB,cAAc,EAAEhB;MAAoB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAME,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CArDQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAuDZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}